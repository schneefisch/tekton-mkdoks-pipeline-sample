apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-docs
spec:
  params:
    - name: repository
      description: Git Repo URL
    - name: repository-name
      description: Git Repo name
  workspaces:
    - name: files
  steps:
    - name: checkout
      image: alpine
      env:
        - name: REPOSITORY
          value: $(params.repository)
      script: |
        #!/bin/sh
        # install git
        apk update && apk add git && git --version
        
        # checkout repo
        echo "Checkout Git repository: ${REPOSITORY}"
        cd $(workspaces.files.path) && git clone -q ${REPOSITORY}

    - name: setup
      image: python:3.9.14
      env:
        - name: REPOSITORYNAME
          value: $(params.repository-name)
      script: |
        #!/bin/sh
        echo "Is pip still there?"
        pip --version
        
        # install mkdocs
        pip install mkdocs
        mkdocs --version
        
        echo "Files"
        ls -al $(workspaces.files.path)/$(params.repository-name)
        
        # mkdocs
        echo "\nBuild docs"
        mkdocs build -f $(workspaces.files.path)/$(params.repository-name)/mkdocs.yaml -d $(workspaces.files.path)/$(params.repository-name)/site/
        
        echo "\nGenerated resources"
        ls -al $(workspaces.files.path)/$(params.repository-name)/site

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: docker-build
spec:
  workspaces:
    - name: files
  params:
    - name: repository-name
      description: Git Repo name
    - name: IMAGE
      description: Name (reference) of the image to build.
    - name: IMAGE_TAG
      description: Tag to differentiate the image-version.
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: EXTRA_ARGS
      default: ""
    - name: BUILDER_IMAGE
      description: The image on which builds will run
#      default: gcr.io/kaniko-project/executor:latest
      default: docker
    - name: baseImage
      description: Base image for GoogleContainerTools/skaffold microservice apps
      default: BASE=alpine:3.9
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
  steps:
    - name: build-and-push
      workingDir: $(workspaces.files.path)/$(repository-name)
      image: $(params.BUILDER_IMAGE)
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
      securityContext:
        privileged: true
      script: |
        echo "Build docker image"
        docker build --no-cache -t ${IMAGE}:${IMAGE_TAG}